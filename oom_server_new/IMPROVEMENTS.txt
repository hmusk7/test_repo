1. 세션을 중간에 나가버리면 로그인이 전부 다 안되는 현상이 발생 (서버를 재시작해야함)
2. 현재 chat 세션 자체를 컬렉션에 저장하도록 chatId 만드는게 좋을듯
3. 실시간 채팅 기능을 이용할게 아니라, 서버는 DB 로 연결된 채팅방을 관리하고, 클라이언트가 email 로 연결을 시도하면,
   서버는 email 로 유저를 식별하여 해당 채팅방의 채팅 내역을 불러오고 DB 에서 불러오고, 클라이언트가 채팅을 남기면 DB에 기록하고
   DB에 기록된 내용을 다른 유저가 접속했을 때 그 채팅방 내역을 쏴주면 됨.
   서버는 클라이언트가 최초 연결을 시도할 때 email 을 받아서 Sender 에 UserId 를 등록해놓기
   -> 클라이언트가 const socket = io(URL) 로 최초의 연결 시도
   -> 서버의 io.on('connection', socket => {}); 내부의
      socket.on('register', async (data) => {}) 에서 초기화 시작
      1. data 에서 아이디 추출해서 chatSession 항목이 있는지 조사
      1-(1). 있으면 ChatSessions 의 _id에 해당하는 ChatLogs 를 불러옴.
      1-(2). ChatLogs 를 클라이언트에 넘겨주고, 클라이언트는 Messages 상태 배열에 저장
      2. 없으면 ChatSessions 을 생성하고, Users 의 id 를 할당해준 뒤,


* 매칭 시스템 *
매일 전역적으로 알고리즘이 돌아가서 랜덤하게 매칭해줌
DB 의 카운트만큼 배열의 인덱스에 각각 인덱스 값을 할당하고 랜덤하게 섞기 (중복 매칭 및 자기 자신과의 매칭 알아서 피해짐)
두개씩 짝지어서 ChatSessions 에 업데이트하기

* 채팅 시스템 *
유저 접속 -> 소켓 연결 -> register 이벤트에서 id 넘겨주고, DB 불러오기 -> 채팅세션에서 2명이 온라인이 아니면 -> DB에만 갱신하고 return -> 둘다 온라인이면 소켓 통신
유저: 채팅 세션 id 참조
채팅 세션: 연결된 유저 id, 온라인 상태(number, 최대 2)
채팅 로그: 채팅 세션 id 참조

채팅 세션은 연결된 유저 id, 유저의 온라인 상태를 저장하고 있음.
유저가 채팅방에 입장할 때, 유저의 상태를 온라인(필드값이며, true로)으로 만들고, 채팅 세션에 온라인 상태를 TRUE 로 만들고 채팅 세션을 통해 로그를 불러옴.
(유저의 아이디로 채팅 세션의 아이디를 얻어오고, 채팅 세션 아이디로 모든 채팅 로그를 불러오고, 조회하여 얻은 채팅 세션의 객체의 온라인 상태를 설정한뒤, 둘 다 온라인이면 소켓을 연결? 어떻게 이벤트를 발생시키는지?)//